#!/usr/bin/perl

#-----------------------------------------------------------------------------------------
# 这个文件用来处理关键字的解析
#-----------------------------------------------------------------------------------------

use warnings;
use strict;
use utf8;
use List::MoreUtils; # 提取数组的uniq函数
use LWP::Simple;

# 函数功能：从给定文字中提取出关键字
# 参数：    给定文字
# 返回值：  关键字，以数组形式返回
# 作者：    班玉都
# 备注：    函数使用搜索引擎来过滤关键字
sub f分词($) {
    my $v要处理的内容 = shift;
    my @a返回结果;
    # 由于搜索引擎对搜索的内容有长度限制。所以有最大长度限制
    # 为了减少搜索次数，搜索内容应该尽可能地长，而为了能够得到搜索结果，又应该尽可能地短
    my $v最大搜索长度 = 38;

    # 同时如果搜索串中出现了语句分隔符，比如逗号，句号，问号，叹号，那么也应该把它们分开搜索
    my @a分隔符 = qw/，。？！, . ? !/;

    my @a分段内容;
    push @a分段内容, $v要处理的内容;

    # 表情的处理 -- 尚未完成
    # 表情不能够被搜索引擎正确地理解，所以应该去除它。而它或许有些别的用处，留着以后处理
    
    # 开始根据标点进行语句的划分
    foreach my $v分隔符 (@a分隔符){
	my @a临时;
	foreach my $v项 (@a分段内容){
	    push @a临时, split($v分隔符，$v项);
	}
	@a分段内容 = @a临时;
    }

    # 处理长度限制的问题，分段内容中的每项的长度都不能大于最大长度
    my @a临时;
    foreach my $v项 (@a分段内容){
	if(length($v项) > $v最大搜索长度){
	    push @a临时, &f根据长度分段($v项);
	} else {
	    push @a临时, $v项;
	}
    }
    my @a分段内容 = @a临时;

    # 分段完成，开始使用搜索引擎来得到关键字
    foreach my $v项 (@a分段内容){
	push @a返回结果, &f搜索引擎提取关键字($v项);
    }
    return @a返回结果;
}

# 函数功能：根据长度分段内容
# 参数：$v处理内容：要处理的内容
#       $v最大长度：允许的最大分段长度
#       $v上下文连接长度：为了确保不会因不正确分段造成信息丢失而做的上下文连接的长度
# 返回结果：分好段的内容，数组形式返回
# 作者：班玉都
# 备注：无
sub f根据长度分段($ $ $){
    my ($v处理内容, $v最大长度, $v上下文连接长度) = @_;
    my @a返回结果;
    while(length($v处理内容) > $v最大长度){
	push @a返回结果，substr $v处理内容, 0, $v最大长度;
	$v处理内容 = substr $v处理内容, $v最大长度 - $上下文连接长度;
    }
    return @a返回结果;
}

# 函数功能：从搜索引擎的搜索结果中提取关键字
# 参数：$v处理内容：要处理的内容，即要放入搜索引擎中搜索的内容
# 返回结果：提取出来的关键字
# 作者：班玉都
# 备注：无
sub f搜索引擎提取关键字($){
    my $v处理内容 = shift;
    my @a关键字;
    my $v搜索结果 = &f百度搜索($v处理内容);
    while($v搜索结果 =~ m/<em>(.*?)<\/>/msg){
	push @a关键字, $1;
    }

    # 关键字之间可能会有重叠的现象，因为搜索引擎可能会匹配到较长的一段，不是一个简单的关键词，
    # 而是一个短句。这样的理论上来说最好能够再简化一点，把短句划分成为关键字。处理起来可能会
    # 有些困难。具体视情况再做决定。另外一些很明显的辅助词如“的”，“把”，“被”之类的也都
    # 可以作为划分的依据。 --未完成
    

    # 消除重复的关键字
    @a关键字 = List::MoreUtils::uniq(@a关键字);
    return @a关键字;
}

# 函数功能：从百度中下载搜索结果页面
# 参数： $v搜索内容： 要搜索的内容
# 返回结果： 搜索结果页面
# 作者： 班玉都
# 备注：无
sub f百度搜索($){
    my $v搜索内容 = shift;
    my $v搜索结果URL = "http://www.baidu.com/s?wd=$v搜索内容";
    my $v搜索结果 = get($v搜索结果URL);
    if(! defined $v搜索结果){
	warn "没有成功下载页面" if $v允许调试信息;
	return undef;
    }
    if ($v搜索结果->is_success){
	return $v搜索结果->content;
    } else {
	warn "请求出错" if $v允许调试信息;
	return undef;
    }
}
